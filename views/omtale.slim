div.buffer
div id="content-left"
  div.image-wrapper
    - if book.cover_url
      div.image-big
        img src="#{book.cover_url}" class="omtalt-bok"
      /div class="hyllestatus inne" book-author er kanskje inne
    - else
      div id="omtale-bilde"
        div id="inner-border"
          div.book-author #{book.authors}
          div.book-title #{book.title}
    - if book.book_on_shelf
      div class="hyllestatus inne" Boka er inne
    - else
      div class="hyllestatus ute" Boka er utlÃ¥nt
  div.ratings
    - rating = book.rating
    -if rating[:source] and rating[:num_raters] > 0
      div.rating
        - red_stars = (rating[:rating]/rating[:num_raters]).to_i
        - red_stars.times do
          img src="/img/star_whole.png" class="star"
        - if red_stars != (rating[:rating]/rating[:num_raters].to_f).round
          - red_stars += 1
          img src="/img/star_half.png" class="star"
        - (5-red_stars).times do
          img src="/img/star_gray.png" class="star"
        p #{t.based_on} #{rating[:num_raters]} #{t.ranking}#{t.plural if rating[:num_raters] > 1 }
          <br/> #{t.from} #{rating[:source]}

div id="content-right"
  div id="left_arrow"
    img src="/img/arrow_left_inactive.png"
  div id="right_arrow"
    - if book.review_collection.size > 1
      img src="/img/arrow_right_active.png"
    - else
      img src="/img/arrow_right_inactive.png"
  div id="omtale-wrapper"
    div id="scroller"
      - if not book.review_collection.empty?
        - book.review_collection.each_with_index do |r, i|
          div class="slide"
            div class="review #{'current' if i == 0}" id="omtale_#{i}" style="#{'display:none' unless i == 0}"
              p #{{r[:text]}}
              p class="source" #{r[:source]}
      - else
        div class="no-review slide"
          #{{t.no_reviews_html}}

    - unless book.review_collection.size <= 1
      div class="indicator-wrapper"
        ul id="indicator"
          - for i in (1..book.review_collection.size)
            li #{i}



div.clearfix
div id="content-bottom"
  div class="flere"
    - unless book.same_author_collection.size == 0
      h3 #{t.menu.more}
      - num = book.same_author_collection.size < 5 ? book.same_author_collection.size : 3
      - book.randomize_books(book.same_author_collection)[0...num].each do |b|
        div.liste-small
          input[class="tnr_id" type="hidden" value=(b.book_id.to_s.match(/tnr_(.*)/)[1])]
          - if b[:cover_url]
            div.cover-small
              img src="#{b[:cover_url]}"
          - else
            div.cover-small-missing #{b[:authors]} <strong> #{b[:title]}</strong>
          p.title: strong #{b[:title]}
          /p.author #{b[:authors]}
      - if book.same_author_collection.size > 4
        a href="/flere"
          div.cover-small
            div.cover-small-missing #{t.menu.see_more}
    p &nbsp;
  - unless book.similar_works_collection.size == 0
    div class="relaterte"
      h3 #{t.menu.related}
      - num = book.similar_works_collection.size < 5 ? book.similar_works_collection.size : 3
      - book.randomize_books(book.similar_works_collection)[0...num].each do |b|
        div.liste-small
          input[class="tnr_id" type="hidden" value=(b.book_id.to_s.match(/tnr_(.*)/)[1])]
          - if b[:cover_url]
            div.cover-small
              img src="#{b[:cover_url]}"
          - else
            div.cover-small-missing
              p #{b[:authors]} <strong> #{b[:title]}</strong>
          p class="title wider": strong #{b[:title]}
          p class="author wider" #{b[:authors]}
      - if book.similar_works_collection.size > 4
        a href="/relaterte"
          div.cover-small
            div.cover-small-missing #{t.menu.see_more}

== render :slim, :'websocket'    if SETTINGS["rfid"]
== render :slim, :'barcode'      if SETTINGS["barcode"]
== render :slim, :'error_report' if SETTINGS["error_report"]

javascript:
  $(document).ready(function () {

    $('button#avbryt-knapp').on('click', function() {
      $('#overlay').hide();
      $('#vi-leter').hide();
      if(request) {request.abort();} //abort running requests
    });

    $('#indicator li:first').addClass("active");

    $('#left_arrow').on('click', function(){
      var current = parseInt($('.current').attr('id').substr(7));
      var numReviews = $('.review').size();

      if (current > 0) {
        var next = current - 1;
        $('.current').removeClass('current').hide();
        $('#omtale_'+next).addClass('current').show();

        $('#indicator li').removeClass('active');
        $('#indicator li:eq(' + next + ')').addClass('active');

        $('#right_arrow img').attr('src', "/img/arrow_right_active.png");
        if (next == 0) {
          $('#left_arrow img').attr('src', "/img/arrow_left_inactive.png");
        }
      }
    });

    $('#right_arrow').on('click', function(){
      var current = parseInt($('.current').attr('id').substr(7));
      var numReviews = $('.review').size();

      if (current < (numReviews -1)) {
        var next = current + 1;
        $('.current').removeClass('current').hide();
        $('#omtale_'+next).addClass('current').show();

        $('#indicator li').removeClass('active');
        $('#indicator li:eq(' + next + ')').addClass('active');

        $('#left_arrow img').attr('src', "/img/arrow_left_active.png");
        if (next == numReviews -1) {
          $('#right_arrow img').attr('src', "/img/arrow_right_inactive.png");
        }
      }

    });

    $('.liste-small').on('click', function(evt) {
      evt.preventDefault();
        var title = $(this).find('p.title').html();
        var tnr = $(this).find('input.tnr_id').val();
        // show overlay
        $('#overlay').show();
        $('button#avbryt-knapp').html('Avbryt');
        $('div#vi-leter p').html("#{t.fetching_info} \"" + title + '" <div id="loading"></div>' );
        $('#vi-leter').show();

        request = $.ajax({
          url: '/populate/'+tnr,
          type: 'GET'});

        request.done(function(msg) {
          $.get('/copy', function(data) {
            window.location.replace("/omtale");
          });
        });

        request.fail(function(jqXHR, textStatus, errorThrown) {
          return;
        });
    });

  });
